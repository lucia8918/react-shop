[{"/Users/paden/Documents/workspace-study/react-shop/src/App.js":"1","/Users/paden/Documents/workspace-study/react-shop/src/reportWebVitals.js":"2","/Users/paden/Documents/workspace-study/react-shop/src/index.js":"3","/Users/paden/Documents/workspace-study/react-shop/src/components/Product.js":"4","/Users/paden/Documents/workspace-study/react-shop/src/data.js":"5","/Users/paden/Documents/workspace-study/react-shop/src/components/Detail.js":"6","/Users/paden/Documents/workspace-study/react-shop/src/components/Stock.js":"7","/Users/paden/Documents/workspace-study/react-shop/src/components/TabContent.js":"8","/Users/paden/Documents/workspace-study/react-shop/src/components/Cart.js":"9"},{"size":4464,"mtime":1606453647165,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1606201120925,"results":"12","hashOfConfig":"11"},{"size":2134,"mtime":1606440018605,"results":"13","hashOfConfig":"11"},{"size":1274,"mtime":1606459094255,"results":"14","hashOfConfig":"11"},{"size":485,"mtime":1606207474748,"results":"15","hashOfConfig":"11"},{"size":6094,"mtime":1606438532621,"results":"16","hashOfConfig":"11"},{"size":117,"mtime":1606365243840,"results":"17","hashOfConfig":"11"},{"size":523,"mtime":1606367905657,"results":"18","hashOfConfig":"11"},{"size":2111,"mtime":1606453182231,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1173hfb",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/paden/Documents/workspace-study/react-shop/src/App.js",["40"],"/Users/paden/Documents/workspace-study/react-shop/src/reportWebVitals.js",[],"/Users/paden/Documents/workspace-study/react-shop/src/index.js",["41","42","43","44"],"/Users/paden/Documents/workspace-study/react-shop/src/components/Product.js",["45","46"],"/Users/paden/Documents/workspace-study/react-shop/src/data.js",["47"],"export default [\n  {\n    id: 0,\n    title: 'White and Black',\n    content: 'Born in France',\n    price: 120000,\n    img: 'https://codingapple1.github.io/shop/shoes1.jpg'\n  },\n\n  {\n    id: 1,\n    title: 'Red Knit',\n    content: 'Born in Seoul',\n    price: 110000,\n    img: 'https://codingapple1.github.io/shop/shoes2.jpg'\n  },\n\n  {\n    id: 2,\n    title: 'Grey Yordan',\n    content: 'Born in the States',\n    price: 130000,\n    img: 'https://codingapple1.github.io/shop/shoes3.jpg'\n  }\n]","/Users/paden/Documents/workspace-study/react-shop/src/components/Detail.js",["48","49","50","51","52","53","54"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Nav, Form } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport \"../css/Detail.scss\";\nimport Stock from \"./Stock\";\nimport TabContent from \"./TabContent\";\n\nimport { StocksContext } from \"../App\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\n\n// Life Cycle Hook 옛날에는 이렇게 component 생명 주기 관리.\n// 생성, 재랜더링, 삭제\nclass Detail2 extends React.Component {\n  componentDidMount() {\n    //Detail2 컴포넌트가 Mount 되고나서 실행할 코드\n  }\n\n  componentWillUnmount() {\n    //Detail2 컴포넌트가 Unmount 되기전에 실행할 코드\n  }\n}\n\nlet 박스 = styled.div`\n  padding: 20px;\n`;\nlet 제목 = styled.h4`\n  font-size: 20px;\n  color: ${(props) => props.색상};\n`;\n\nfunction Detail(props) {\n  let [alert, alert변경] = useState(true);\n  let [입력값, 입력값변경] = useState(\"\");\n  let stocks = useContext(StocksContext);\n  let [누른탭, 누른탭변경] = useState(0);\n  let [스위치, 스위치변경] = useState(false);\n  let [구매수량, 구매수량변경] = useState(1);\n\n  let changeValue = (e) => {\n    입력값변경(e.target.value);\n  };\n\n  let submitValue = () => {\n    console.log(입력값);\n  };\n\n  useEffect(() => {\n    console.log(\"created\");\n    let 타이머 = setTimeout(() => {\n      // document.getElementById(\"my-alert\").style.display=\"none\";\n      console.log(\"alert 실행\");\n      alert변경(false);\n    }, 2000);\n\n    return () => {\n      clearTimeout(타이머);\n      console.log(\"exit\");\n    };\n  }, [alert]);\n\n  let { id } = useParams();\n  let history = useHistory();\n\n  let shoe = props.shoes.find((item) => item.id == id);\n\n  if (shoe == null) return <div>없는 상품입니다.</div>;\n\n  return (\n    <div className=\"container\">\n      <박스>\n        <제목 색상=\"blue\">Detail</제목>\n      </박스>\n\n      {/*<input onChange={changeValue} />*/}\n      {/*<button onClick={submitValue}>입력</button>*/}\n\n      {alert === true ? (\n        <div id=\"my-alert\" className=\"my-alert\">\n          <p>재고가 얼마 남지 않았습니다.</p>\n        </div>\n      ) : null}\n\n      {/*<div name=\"my-alert\" className=\"my-alert-red\">*/}\n      {/*  <p>재고가 얼마 남지 않았습니다.</p>*/}\n      {/*</div>*/}\n      {/*<div name=\"my-alert\" className=\"my-alert-black\">*/}\n      {/*  <p>재고가 얼마 남지 않았습니다.</p>*/}\n      {/*</div>*/}\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <img src={shoe.img} width=\"100%\" />\n        </div>\n        <div className=\"col-md-6 mt-4\">\n          <h4 className=\"pt-5\">{shoe.title}</h4>\n          <p>{shoe.content}</p>\n          <p>{shoe.price}</p>\n          <Stock stock={stocks[shoe.id]}></Stock>\n\n          <Form>\n            <Form.Group controlId=\"exampleForm.SelectCustom\">\n              <Form.Label>수량 선택: {구매수량}</Form.Label>\n              <Form.Control\n                as=\"select\"\n                custom\n                onChange={(e) => {\n                  구매수량변경(e.target.value);\n                }}\n              >\n                <option selected>1</option>\n                <option>2</option>\n                <option>3</option>\n                <option>4</option>\n                <option>5</option>\n              </Form.Control>\n            </Form.Group>\n          </Form>\n\n          {/*>>> context api 사용시*/}\n          {/*<button*/}\n          {/*  className=\"btn btn-danger\"*/}\n          {/*  onClick={() => {*/}\n          {/*    let newArray = [...stocks];*/}\n          {/*    newArray[shoe.id]--;*/}\n          {/*    props.stocks변경(newArray);*/}\n          {/*  }}*/}\n          {/*>*/}\n          {/*  주문하기*/}\n          {/*</button>*/}\n\n          {/*>>> 리덕스 사용시*/}\n          <button\n            className=\"btn btn-danger\"\n            onClick={() => {\n              props.dispatch({\n                type: \"항목추가\",\n                payload: { id: shoe.id, name: shoe.title, quan: 구매수량 },\n              });\n              history.push(\"/cart\");\n            }}\n          >\n            주문하기\n          </button>\n          <button\n            className=\"btn btn-info ml-1\"\n            onClick={() => {\n              history.goBack();\n            }}\n          >\n            뒤로가기\n          </button>\n          {/*<button*/}\n          {/*  className=\"btn btn-danger\"*/}\n          {/*  onClick={() => {*/}\n          {/*    history.push(\"/\");*/}\n          {/*  }}*/}\n          {/*>*/}\n          {/*  메인페이지로 이동*/}\n          {/*</button>*/}\n        </div>\n      </div>\n\n      <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\n        <Nav.Item className=\"col-4\">\n          <Nav.Link\n            eventKey=\"link-0\"\n            onClick={() => {\n              스위치변경(false);\n              누른탭변경(0);\n            }}\n          >\n            상세설명\n          </Nav.Link>\n        </Nav.Item>\n        <Nav.Item className=\"col-4\">\n          <Nav.Link\n            eventKey=\"link-1\"\n            onClick={() => {\n              스위치변경(false);\n              누른탭변경(1);\n            }}\n          >\n            이용후기\n          </Nav.Link>\n        </Nav.Item>\n        <Nav.Item className=\"col-4\">\n          <Nav.Link\n            eventKey=\"link-2\"\n            onClick={() => {\n              스위치변경(false);\n              누른탭변경(2);\n            }}\n          >\n            Q&A\n          </Nav.Link>\n        </Nav.Item>\n      </Nav>\n\n      <CSSTransition in={스위치} classNames=\"wow\" timeout={500}>\n        <TabContent 누른탭={누른탭} 스위치변경={스위치변경} />\n      </CSSTransition>\n    </div>\n  );\n}\n\n// Redux store에서 데이터를 가져와서, props로 만들어주는 함수\nfunction state를props화(state) {\n  console.log(state);\n  return { 장바구니state: state.reducer };\n}\n\nexport default connect(state를props화)(Detail);\n","/Users/paden/Documents/workspace-study/react-shop/src/components/Stock.js",[],"/Users/paden/Documents/workspace-study/react-shop/src/components/TabContent.js",[],"/Users/paden/Documents/workspace-study/react-shop/src/components/Cart.js",[],{"ruleId":"55","severity":1,"message":"56","line":26,"column":21,"nodeType":"57","messageId":"58","endLine":26,"endColumn":23},{"ruleId":"59","severity":1,"message":"60","line":13,"column":15,"nodeType":"61","messageId":"62","endLine":13,"endColumn":17},{"ruleId":"59","severity":1,"message":"60","line":42,"column":37,"nodeType":"61","messageId":"62","endLine":42,"endColumn":39},{"ruleId":"59","severity":1,"message":"60","line":48,"column":55,"nodeType":"61","messageId":"62","endLine":48,"endColumn":57},{"ruleId":"59","severity":1,"message":"60","line":51,"column":37,"nodeType":"61","messageId":"62","endLine":51,"endColumn":39},{"ruleId":"63","severity":1,"message":"64","line":2,"column":8,"nodeType":"65","messageId":"66","endLine":2,"endColumn":11},{"ruleId":"67","severity":1,"message":"68","line":40,"column":9,"nodeType":"69","endLine":40,"endColumn":50},{"ruleId":"70","severity":1,"message":"71","line":1,"column":1,"nodeType":"72","endLine":25,"endColumn":2},{"ruleId":"63","severity":1,"message":"73","line":15,"column":7,"nodeType":"65","messageId":"66","endLine":15,"endColumn":14},{"ruleId":"63","severity":1,"message":"74","line":41,"column":7,"nodeType":"65","messageId":"66","endLine":41,"endColumn":18},{"ruleId":"63","severity":1,"message":"75","line":45,"column":7,"nodeType":"65","messageId":"66","endLine":45,"endColumn":18},{"ruleId":"59","severity":1,"message":"60","line":66,"column":49,"nodeType":"61","messageId":"62","endLine":66,"endColumn":51},{"ruleId":"76","severity":1,"message":"77","line":72,"column":7,"nodeType":"69","endLine":72,"endColumn":11},{"ruleId":"76","severity":1,"message":"78","line":73,"column":9,"nodeType":"69","endLine":73,"endColumn":23},{"ruleId":"67","severity":1,"message":"68","line":93,"column":11,"nodeType":"69","endLine":93,"endColumn":46},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'Detail2' is defined but never used.","'changeValue' is assigned a value but never used.","'submitValue' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component 박스 must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component 제목 must be in PascalCase or SCREAMING_SNAKE_CASE"]